using Content.Client.Message;
using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.ShipEvent.UI;

/// <summary>
/// Window for ship event team-view action
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class TeamViewWindow : DefaultWindow
{
    public TeamViewWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public void Update(TeamViewBoundUserInterfaceState state)
    {
        TeamContainer.DisposeAllChildren();
        ModifierContainer.DisposeAllChildren();

        TeamContainer.AddChild(CreateEntry(
            Loc.GetString("shipevent-teamview-label-name"),
            Loc.GetString("shipevent-teamview-label-ship"),
            Loc.GetString("shipevent-teamview-label-crew"),
            Loc.GetString("shipevent-teamview-label-points")
        ));

        foreach (TeamViewTeamState teamState in state.Teams)
        {
            TeamContainer.AddChild(CreateEntry(
                teamState.Name != null ? $"[color={teamState.Color.ToHex()}]{teamState.Name}[/color]" : "N/A",
                teamState.ShipName ?? "N/A",
                teamState.AliveCrewCount ?? "N/A",
                teamState.Points.ToString()
            ));
        }

        foreach (string modifier in state.Modifiers)
        {
            ModifierContainer.AddChild(new Label() { Text = modifier });
        }
    }

    private BoxContainer CreateEntry(string name, string ship, string crew, string points)
    {
        float minWidth = 590f / 4f;

        BoxContainer container = new();
        container.Orientation = BoxContainer.LayoutOrientation.Horizontal;

        RichTextLabel label = new();
        label.SetMarkup(name);
        label.MinWidth = label.SetWidth = minWidth;
        container.AddChild(label);

        label = new();
        label.SetMarkup(ship);
        label.MinWidth = label.SetWidth = minWidth;
        container.AddChild(label);

        label = new();
        label.SetMarkup(crew);
        label.MinWidth = label.SetWidth = minWidth;
        container.AddChild(label);

        label = new();
        label.SetMarkup(points);
        label.MinWidth = label.SetWidth = minWidth;
        container.AddChild(label);

        return container;
    }
}
