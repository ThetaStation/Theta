using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.ShipEvent.UI;

//todo: add ability to kick members from team, make team announcements & other necessary stuff
[GenerateTypedNameReferences]
public sealed partial class CaptainMenuWindow : DefaultWindow
{
    public ShipPickerWindow shipPicker = default!;

    public event Action<BaseButton.ButtonEventArgs>? ShipPickerButtonPressed;
    public event Action<BaseButton.ButtonEventArgs>? BlackListButtonPressed;
    public event Action<BaseButton.ButtonEventArgs>? KickButtonPressed;

    public string BlacklistText => BlackListEdit.Text;
    public string KickCKey => KickCKeyEdit.Text;

    public CaptainMenuWindow()
    {
        shipPicker = new ShipPickerWindow();
        RobustXamlLoader.Load(this);
        ShipPickerButton.OnPressed += _ =>
        {
            shipPicker.OpenCentered();
            ShipPickerButtonPressed?.Invoke(_);
        };
        BlackListButton.OnPressed += _ =>
        {
            BlackListButtonPressed?.Invoke(_);
        };
        KickButton.OnPressed += _ =>
        {
            KickButtonPressed?.Invoke(_);
        };
    }

    public void UpdateState(ShipEventCaptainMenuBoundUserInterfaceState state)
    {
        MemberList.Text = string.Join(';', state.Members);
        ShipName.Text = Loc.GetString(state.CurrentShipType?.Name ?? "N/A");
    }
}
