using Content.Shared.Theta.ShipEvent;
using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.ShipEvent.UI;

[GenerateTypedNameReferences]
public sealed partial class TeamCreationWindow : DefaultWindow
{
    public ShipPickerWindow ShipPicker;
    public event Action<BaseButton.ButtonEventArgs>? CreationButtonPressed;

    public event Action<BaseButton.ButtonEventArgs>? ShipPickerButtonPressed;

    public string TeamName => NameEdit.Text;

    public Color TeamColor => ColorEdit.Color;

    public string Blacklist => BlacklistEdit.Text;

    public ShipTypePrototype? ShipType => ShipPicker.Selection;

    public TeamCreationWindow()
    {
        RobustXamlLoader.Load(this);
        ShipPicker = new ShipPickerWindow();
        ColorEdit.OnColorChanged += _ => OnColorChanged(); //will runtime if no callback for this event is set
        CreationButton.OnPressed += _ => CreationButtonPressed?.Invoke(_);
        ShipPickerButton.OnPressed += _ =>
        {
            ShipPicker.OpenCentered();
            ShipPickerButtonPressed?.Invoke(_);
        };
        ShipPicker.OnSelectionMade += _ =>
        {
            ShipLabel.Text = Loc.GetString(ShipPicker.Selection?.Name ?? "N/A");
        };
    }

    public void OnColorChanged() { }

    public void UpdateState(ShipEventCreateTeamBoundUserInterfaceState state)
    {
        UserMessage.Text = state.UserMessage;
    }

    public void Dispose()
    {
        base.Dispose();
        ShipPicker.Dispose();
    }
}
