using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.ShipEvent.UI;

[GenerateTypedNameReferences]
public sealed partial class BluespaceCatapultWindow : DefaultWindow
{
    public event Action<BaseButton.ButtonEventArgs>? LaunchButtonPressed;
    public event Action<BaseButton.ButtonEventArgs>? RefreshButtonPressed;
    public int Elevation => int.TryParse(ElevationField.Text, out int elevation) ? elevation : -1;
    public int Bearing => int.TryParse(BearingField.Text, out int bearing) ? bearing : -1;
    public int Power => int.TryParse(PowerField.Text, out int power) ? power : -1;

    public BluespaceCatapultWindow()
    {
        RobustXamlLoader.Load(this);
        LaunchButton.OnPressed += _ => LaunchButtonPressed?.Invoke(_);
        RefreshButton.OnPressed += _ => RefreshButtonPressed?.Invoke(_);
    }

    public void UpdateState(BluespaceCatapultBoundUserInterfaceState state)
    {
        UserMessage.Text = state.UserMessage;
        Charge.Text = state.Charge + "/" + state.MaxCharge;
    }
}
