using Content.Client.Message;
using Content.Shared.Theta.ShipEvent;
using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.ShipEvent.UI;

[GenerateTypedNameReferences]
public sealed partial class ShipPickerWindow : DefaultWindow
{
    public ShipTypePrototype? Selection;

    public Action<ShipTypePrototype?>? OnSelectionMade;

    public ShipPickerWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public void UpdateState(ShipPickerBoundUserInterfaceState state)
    {
        ShipOptionsContainer.Children.Clear();

        foreach (var shipType in state.ShipTypes)
        {
            var shipTypeEntry = new BoxContainer();
            var shipTypeEntryInfoHolder = new BoxContainer();
            shipTypeEntry.Orientation = BoxContainer.LayoutOrientation.Vertical;
            shipTypeEntryInfoHolder.Orientation = BoxContainer.LayoutOrientation.Horizontal;

            var shipTypeLabel = new RichTextLabel();
            var crewAmountStr = Loc.GetString("shipevent-shippicker-mincrewamount") + " " + shipType.MinCrewAmount;
            shipTypeLabel.SetMarkup($"{Loc.GetString(shipType.Name)}\n \n{Loc.GetString(shipType.Class)}\n \n{crewAmountStr}\n \n{Loc.GetString(shipType.Description)}");
            shipTypeLabel.MinWidth = Width / 2;
            shipTypeLabel.SetWidth = Width / 2;

            var shipTypePreviewImage = new TextureRect();
            shipTypePreviewImage.TexturePath = shipType.PreviewImagePath;
            shipTypePreviewImage.SetWidth = Width / 2;
            shipTypePreviewImage.MaxHeight = Height * 1.2f;
            shipTypePreviewImage.Stretch = TextureRect.StretchMode.Scale;

            shipTypeEntryInfoHolder.AddChild(shipTypeLabel);
            shipTypeEntryInfoHolder.AddChild(shipTypePreviewImage);

            var selectionButton = new Button();
            selectionButton.Text = Loc.GetString("shipevent-shippicker-selectionbutton");
            selectionButton.OnPressed += _ =>
            {
                Selection = shipType;
                OnSelectionMade?.Invoke(Selection);
                Close();
            };
            selectionButton.MinWidth = Width;
            selectionButton.SetWidth = Width;

            shipTypeEntry.AddChild(shipTypeEntryInfoHolder);
            shipTypeEntry.AddChild(selectionButton);

            ShipOptionsContainer.AddChild(shipTypeEntry);
        }
    }
}
