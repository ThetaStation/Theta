using Content.Client.Theta.ModularRadar.Modules.ShipEvent;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.AutoGenerated;
using Robust.Shared.Map;
using Content.Shared.Shuttles.BUIStates;

namespace Content.Client.Theta.ShipEvent.Console;

[GenerateTypedNameReferences]
public sealed partial class RocketConsoleWindow : DefaultWindow
{
    public event Action? OnLaunchButtonPressed;
    public RadarControlRocket RadarModule = default!;

    public RocketConsoleWindow()
    {
        RobustXamlLoader.Load(this);

        LaunchButton.OnPressed += _ => OnLaunchButtonPressed?.Invoke();
        ResetButton.OnPressed += _ => RadarModule.Waypoints.Clear();

        if (RadarScreen.TryGetModule<RadarControlRocket>(out var module))
        {
            RadarModule = module;
        }
        else
        {
            Logger.Error("Rocket launcher console: missing 'RadarControlRocket' radar module.");
        }
    }

    public void SetMatrix(EntityCoordinates? coordinates, Angle? angle)
    {
        RadarScreen.SetMatrix(coordinates, angle);
    }

    public void SetOwner(EntityUid uid)
    {
        RadarScreen.SetOwnerUid(uid);
    }

    public void UpdateState(RadarConsoleBoundInterfaceState state)
    {
        RadarScreen.UpdateState(state);
    }
}