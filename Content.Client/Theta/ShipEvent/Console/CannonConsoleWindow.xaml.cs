using Content.Client.Computer;
using Content.Client.UserInterface.Controls;
using Content.Shared.Shuttles.BUIStates;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;

namespace Content.Client.Theta.ShipEvent.Console;

[GenerateTypedNameReferences]
public sealed partial class CannonConsoleWindow : FancyWindow, IComputerWindow<RadarConsoleBoundInterfaceState>
{
    public CannonConsoleWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public void UpdateState(RadarConsoleBoundInterfaceState state, List<(int, int)> ammoValues)
    {
        RadarScreen.UpdateState(state);
        UpdateAmmo(ammoValues);
    }

    public void SetMatrix(EntityCoordinates? coordinates, Angle? angle)
    {
        RadarScreen.SetMatrix(coordinates, angle);
    }

    public void SetOwner(EntityUid uid)
    {
        RadarScreen.SetOwnerUid(uid);
    }

    private void UpdateAmmo(List<(int, int)> ammoValues)
    {
        AmmoStatusContents.RemoveAllChildren();
        foreach ((var ammo, var maxAmmo) in ammoValues)
        {
            var status = new CannonAmmoStatus();
            AmmoStatusContents.AddChild(status);
            var noMagazine = (ammo == 0 && maxAmmo == 0);
            status.Update(!noMagazine, ammo, maxAmmo);
        }
    }
}
