uniform sampler2D ScreenTexture;
uniform highp vec2 ScreenSize;
uniform highp vec2 AttractionCenter;
uniform highp float AttractionStrength;
uniform highp float Reverse; //1 or 0
uniform highp float Time; //not using TIME since we need time since shader startup, not since game startup
uniform highp float Duration;

void fragment(){
    //equivalent to if (Reverse) { time = Duration - Time; }
    highp float time = (2.0 * Reverse - 1.0) * (Duration * Reverse - Time);
    time = max(0.0, time);
    
    highp vec2 delta = FRAGCOORD.xy - AttractionCenter;
    highp vec2 origin = AttractionStrength * time * (1.0/length(delta)) * delta + FRAGCOORD.xy;
    highp vec2 originUv = origin / ScreenSize;
    //equivalent to if(originUv.x > 1.0 && ...) { COLOR = highp vec4(0.0); }
    highp float m = float(originUv.x < 1.0 && originUv.y < 1.0 && originUv.x > 0.0 && originUv.y > 0.0);
    COLOR = texture(ScreenTexture, originUv) * m;
}